% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/general.R
\name{datafile}
\alias{datafile}
\title{Searches for a file in a local data repository}
\usage{
datafile(file, literal = FALSE)
}
\arguments{
\item{file}{String. The name of the file to search for in the data
repositories.}

\item{literal}{A logical scalar. Should the file be searched in the data
repositories or just locally? If TRUE, just returns \code{file}.}
}
\value{
The output is a string that contains the path to file in one of
the data repository specified in \code{datapath}. If \code{literal = TRUE},
it just returns \code{file}.
}
\description{
Searches for \code{file} in the sequence of data repositories
specified as strings in the variable \code{datapath}. Returns the path to file as
a string tipically for use in input functions (read.table, etc...)
}
\details{
\code{datafile} searches for \code{file}
first in the first component of the vector \code{datapath}. If it finds it, it returns the
concatenation of \code{datapath[1]} and \code{file}.  If it does not, it looks for
\code{file} in the second component of \code{datapath}, returns the concatenation of
\code{datapath[2]} and \code{file}. If \code{literal = TRUE},
it just returns \code{file} without checking whether \code{file} exists in the current directory. If \code{file} is not found in any of the directories
specified in \code{datapath} and \code{literal = FALSE}, a message error is thrown
and the execution is stopped.

The path to the datarepositories in \code{datapath} should end with "/".
For example \code{datapath <- "~/OPADA/data/"}.
}
\examples{
## defines two data repositories
datapath <- c("~/OPADA/data/", "./data/)

\dontrun{
datafile("mydata.txt")
}
## In the case when "mydata.txt" is not found in "~OPADA/data/" but is located
## in "./data/":
## > "./data/mydata.txt

## In the case when "mydata.txt" is not to be found in any of the datadirectories
## specified in \\code{datapath}
## Error in datafile("brout") :
## Unable to find file  brout in any of the folders specified by datapath.

## With \\code{literal = TRUE}, returns the argument \\code{file} without checking
## whether it exists.
datafile("mydata.txt", literal = TRUE)
}

