% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general.R
\name{info_join}
\alias{info_join}
\title{Provides information about rows matching for dplyr join verbs}
\usage{
info_join(x, y, ...)
}
\arguments{
\item{x, }{y tbls to join.}

\item{...}{Any argument admitted by the join verbs of \code{dplyr}.}
}
\description{
Provides verbose information about rows matching when joining dataframes
using dplyr join verbs. It prints a summary of the number of rows in \code{x} that
have no match in \code{y}, rows in \code{x} that have only one match in
\code{y} and rows in \code{x} that have more than one match in \code{y}.
}
\details{
\code{info_join} admits the same arguments as the join verbs
(\code{\link[dplyr]{left_join}}, \code{\link[dplyr]{inner_join}}, \code{\link[dplyr]{full_join}},
 \code{\link[dplyr]{anti_join}} and
\code{\link[dplyr]{semi_join}}) in \code{dplyr}, and prints a summary of rows matching: the
number of rows in \code{x} that have no match in \code{y}, rows in \code{x}
that have only one match in \code{y} and rows in \code{x} that have more than
one match in \code{y}, and symmetrically for the rows in \code{y} with no,
one, or more than one match in \code{x}.

It is useful to anticipate the results of the join action, in particular to
control the dimension of the output dataframe. It allows, for example, to prevent unvoluntary
mistakes upon joining \code{x} and \code{y}, when the user may be unaware of
duplicated rows matching in \code{y} which results in more rows than in
$\code{x}$.
}
\examples{
##  Picking the second example from the Two-table-verbs vignette in
## dplyr.
library("dplyr")
df1 <- data_frame(x = c(1, 2), y = 2:1)
df2 <- data_frame(x = c(1, 3), a = 10, b = "a")
info_join(df1, df2)

}

