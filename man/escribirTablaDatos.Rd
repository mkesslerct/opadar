% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/general.R
\name{escribirTablaDatos}
\alias{escribirTablaDatos}
\title{Una función para escribir un dataframe a un fichero Excel.}
\usage{
escribirTablaDatos(wb, sheetName, x, titulo = NULL, titleStyle = NULL,
  headerStyle = NULL, areaTitulo = "A1:C1", upperleftCell = NULL,
  spanColumns = NULL, ...)
}
\arguments{
\item{wb}{El workbook que será modificado.}

\item{sheetName}{String. El nombre de la hoja donde se debe escribir el
dataframe \code{x}. Si no existe en el workbook, será creada.}

\item{x}{dataframe. El dataframe que se escribirá en el workbook.}

\item{titulo}{String. El texto que se coloca encima del dataframe en el
workbook. Si no se desea ningún título, es suficiente con no especificarlo,
el defecto de este argumento siendo \code{NULL}.}

\item{titleStyle}{El estilo que se desea usar para \code{titulo}. Debe haber
sido creado con \code{openxlsx::createStyle}. Si no se especifica, se usa un
estilo con \code{fontsize = 12}, \code{textDecoration = c("bold", "italic")},
\code{valign = "center"} y \code{halign = "center"}.}

\item{headerStyle}{El estilo que se desea usar para la cabecera del dataframe
\code{x}. Debe haber sido creado con \code{openxlsx::createStyle}. Si no se
especifica, se usa un estilo con color de fuente blanco y fondo azul, además
de \code{textDecoration = "Bold"}, \code{valign = "center"} y \code{halign =
"center"}.}

\item{areaTitulo}{String. La especificación formato Excel del área
rectangular que debe ocupar el título en la hoja. Se combinarán todas las
celdas del área. Por defecto es "A1:C1", es decir las tres primeras celdas de
la primera fila.}

\item{upperleftCell}{String. La especificación formato Excel de la celda
superior izquierda del área donde se escribirá el dataframe \code{x}. Por
defecto, es dos filas más abajo que la esquina izquierda inferior del título.}

\item{spanColumns}{String. Permite combinar celdas verticales consecutivas si
contienen el mismo valor, para mejorar el aspecto de tablas por ejemplo. Es
un vector construido a partir de los nombres de columnas de \code{x} en las
que hay que combinar celdas verticales consecutivas iguales. Si \code{x} es
un dataframe con columnas \code{profesor},\code{sexo}, \code{asignatura}, por
ejemplo, si \code{spanColumn = c("profesor;sexo", "asignatura")}, quiere
decir que \code{profesor} y \code{sexo} tienen la misma estructura de
combinación, determinada por \code{profesor} (\code{sexo} "hereda" de las
combinaciones verticales determinadas por \code{profesor}. \code{asignatura}
tiene su propio estructura de combinación vertical, pero está supedita a las
combinaciones de \code{profesor}. Ver la vignette para más explicaciones y
ejemplos.}
}
\value{
Un workbook que es invisible.
}
\description{
Combina diferentes funciones de \code{openxlsx} para, dado  un workbook, crear
una hoja, escribir un título, escribir un dataframe en el workbook en un
único paso. Permite también la combinación (merge) de celdas verticales
consecutivas que contienen el mismo valor, para mejorar la presentación de
tablas.
Combina bien con  el "pipe operator" de \code{magrittr}, tal como
queda ilustrado en la vignette.
}
\examples{
library("magrittr")
library("openxlsx")
opada <- data.frame(Nombre = c("Álvaro", "Antonio", "Mari Carmen",
                               "Mathieu"),
                   Sexo = c("Hombre", "Hombre", "Mujer", "Hombre"),
                     Edad = c(25, 25, 23, 25),
                     Nacionalidad = c("720", "720", "720", "250"))

## Escribimos en un fichero
\dontrun
{
createWorkbook() \%>\%
     escribirTablaDatos(createWorkbook(),
                        sheetName = "La OPADA",
                        x = opada,
                        titulo = "Miembros de la OPADA",
                        areaTitulo = "A2:D2",
                        withFilter = FALSE) \%>\%
     saveWorkbook("ejemplo.xlsx", overwrite = TRUE)
}
## Para más ejemplos, ver la vignette
}

